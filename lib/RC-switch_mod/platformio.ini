; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = examples/ReceiveDemo_Advanced

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENT CHOICE                                   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Uncomment the env line corresponding to your board and modules required,              ;
;you can also adapt the modules by removing the corresponding lines in the env detail  ;
; if you go to the build flag section of your env you will see that some user_config.h ;
; parameters can be overwritten here, for example the gateway name.                    ;
; If you want to avoid the lost of your environments at each update you can put them   ;
; into a separate file called prod_env.ini, it will be automatically read by pio       ;
; an example (prod_env.ini.example) is available into the same folder as this file.    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;default_envs = sonoff-basic-rfr3
;default_envs = esp32dev-rf
;default_envs = nodemcuv2-rf
;default_envs = rf-wifi-gateway
;default_envs = uno-rf


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                              ENVIRONMENTS PARAMETERS                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Libraries and parameters shared accross environements                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



[env]
lib_extra_dirs = .
framework = arduino
build_flags =
  -w ; supress all warnings
monitor_speed = 115200

[com]
esp8266_platform = espressif8266@2.2.3
esp32_platform = espressif32@1.11.1
atmelavr_platform = atmelavr@1.13.0

[com-esp]
build_flags =
  ${env.build_flags}

[com-arduino]
build_flags =
  ${env.build_flags}

[com-arduino-low-memory]
build_flags =
  ${env.build_flags}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENTS LIST                                    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;List of environments that can be build                                                ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp32dev-rf]
platform = ${com.esp32_platform}
board = esp32dev
build_flags = 
  ${com-esp.build_flags}

[env:nodemcuv2-rf]
platform = ${com.esp8266_platform}
board = nodemcuv2
build_flags = 
  ${com-esp.build_flags}
board_build.flash_mode = dout

[env:rf-wifi-gateway]
platform = ${com.esp8266_platform}
board = nodemcuv2
build_flags = 
  ${com-esp.build_flags}
board_build.flash_mode = dout


[env:sonoff-basic-rfr3]
platform = ${com.esp8266_platform}
board = esp8285
build_flags = 
  ${com-esp.build_flags}
board_build.flash_mode = dout

[env:uno-rf]
platform = ${com.atmelavr_platform}
board = uno
build_flags = 
  ${com-arduino-low-memory.build_flags}
